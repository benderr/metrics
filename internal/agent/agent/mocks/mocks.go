// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/benderr/metrics/internal/agent/agent (interfaces: IReport)
//
// Generated by this command:
//
//	mockgen -destination=internal/agent/agent/mocks/mocks.go -package=mocks github.com/benderr/metrics/internal/agent/agent IReport
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	report "github.com/benderr/metrics/internal/agent/report"
	stats "github.com/benderr/metrics/internal/agent/stats"
	gomock "go.uber.org/mock/gomock"
)

// MockIReport is a mock of IReport interface.
type MockIReport struct {
	ctrl     *gomock.Controller
	recorder *MockIReportMockRecorder
}

// MockIReportMockRecorder is the mock recorder for MockIReport.
type MockIReportMockRecorder struct {
	mock *MockIReport
}

// NewMockIReport creates a new mock instance.
func NewMockIReport(ctrl *gomock.Controller) *MockIReport {
	mock := &MockIReport{ctrl: ctrl}
	mock.recorder = &MockIReportMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIReport) EXPECT() *MockIReportMockRecorder {
	return m.recorder
}

// GetList mocks base method.
func (m *MockIReport) GetList() []report.MetricItem {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetList")
	ret0, _ := ret[0].([]report.MetricItem)
	return ret0
}

// GetList indicates an expected call of GetList.
func (mr *MockIReportMockRecorder) GetList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockIReport)(nil).GetList))
}

// Update mocks base method.
func (m *MockIReport) Update(arg0 []stats.Item) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update", arg0)
}

// Update indicates an expected call of Update.
func (mr *MockIReportMockRecorder) Update(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIReport)(nil).Update), arg0)
}
